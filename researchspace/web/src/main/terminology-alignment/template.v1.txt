<terminology-alignment-tool 
version = 'v1' 
exactMatchAlignmentRelation = '{ "title": "exact term", "iri": "http://www.w3.org/2004/02/skos/core#exactMatch" }' 
broaderTransitiveAlignmentRelation = '{ "title": "narrow term", "iri": "http://www.w3.org/2004/02/skos/core#broaderTransitive" }' 
terminologyPrefices = '{"http://vocab.dariah.eu/bbt":"bbt", "http://vocab.getty.edu/dataset/aat":"aat"}' 
alignedGraphNS = 'http://forth.gr/alignment/'                      
prefices = '
PREFIX skos: <http://www.w3.org/2004/02/skos/core#> 
PREFIX gvp: <http://vocab.getty.edu/ontology#> 
PREFIX xl: <http://www.w3.org/2008/05/skos-xl#> 
PREFIX bbt: <http://vocab.dariah.eu/bbt/> 
PREFIX bds: <http://www.bigdata.com/rdf/search#> 
PREFIX dc: <http://purl.org/dc/elements/1.1/> 
PREFIX hint: <http://www.bigdata.com/queryHints#> 
'

infoRelations = '( (skos:scopeNote/rdf:value) | skos:scopeNote )'   


typeRelation = '(skos:topConceptOf | a )'
typesRootQuery = '(?type = gvp:Facet || ?type = <http://vocab.dariah.eu/bbt/ConceptScheme/Backbone_Thesaurus> || ?type = skos:Concept)'
typesChildrenQuery = '(?type = gvp:Concept || ?type = gvp:GuideTerm || ?type = gvp:Hierarchy || ?type= gvp:Facet || ?type = skos:Concept)' 
typesParentQuery = '(?type = skos:Concept || ?type= bbt:Facet || ?type = gvp:Concept || ?type = gvp:GuideTerm || ?type = gvp:Hierarchy || ?type = gvp:Facet)'                   
parentshipRelation = '(gvp:broaderGeneric | skos:broaderTransitive | skos:broader )'
typesSearchQuery = 'skos:Concept bbt:Facet gvp:Concept gvp:GuideTerm gvp:Hierarchy gvp:Facet'
labelRelation = '(skos:prefLabel | (gvp:prefLabelGVP/xl:literalForm) | rdfs:label | dc:title)'                          

                          
queries = '
{
          
          
          
  "rootsQuery":  "__prefices__

  SELECT DISTINCT ?item ?label ?hasChildren 
  FROM __graph__ 
  /*FROM __alignmentGraph__*/ 
  WHERE { 
	{ 
       ?item __typeRelation__ ?type .
       FILTER (__typesRootQuery__) 
       MINUS { ?item __parentshipRelation__ ?parent }
       OPTIONAL { ?item __labelRelation__ ?labelX }	   
    }
	OPTIONAL{
		{
			?child __parentshipRelation__ ?item .
		}
        /*union{
			?sourceT  skos:exactMatch  ?item .  
			?child __parentshipRelation__   ?sourceT .
        }*/
    }
    BIND(bound(?child) as ?hasChildren)
           
    BIND ( IF(CONTAINS(STR(?labelX),\"unauthorised\"), STR(?item) , ?labelX) as ?label )

  } ORDER BY ?label",
   
   
   
  "childrenQuery": "__prefices__
              
  SELECT DISTINCT ?item ?label ?hasChildren 
  FROM __graph__ 
  /*FROM __alignmentGraph__*/
  WHERE {
	{
		{?item __parentshipRelation__ ?parent}
		/*UNION {
		?x  skos:exactMatch  ?parent .  
		?item __parentshipRelation__  ?x .
		}*/ 
		/*OPTIONAL {graph  __sourceGraph__  { ?item __labelRelation__ ?label } . }*/ 
		OPTIONAL { ?item __labelRelation__ ?label } 
		OPTIONAL{
			?item __typeRelation__ ?type .
			filter (__typesChildrenQuery__)
		} 
	}
	OPTIONAL { 
		{	?child __parentshipRelation__  ?item. }
		UNION {
			?x skos:exactMatch ?item .
			?child __parentshipRelation__  ?x .
		}
	}  
	BIND(BOUND(?child) AS ?hasChildren)
  } ORDER BY ?label",
   
   
   
	"parentsQuery": "__prefices__

  SELECT DISTINCT ?item ?parent ?parentLabel 
  FROM __graph__ 
  WHERE {
	{
       ?item __typeRelation__ ?type .
       filter(__typesParentQuery__)
       ?item __parentshipRelation__  ?parent .
       OPTIONAL { ?parent __labelRelation__ ?parentLabel }
       }
  } ORDER BY ?parentLabel",
   
           
           
  "searchQuery": "__prefices__
          
  SELECT DISTINCT ?item ?score ?label ?hasChildren 
	FROM __graph__ 
	/*FROM __alignmentGraph__*/ 
	WHERE {       
	{        
		SERVICE <http://www.bigdata.com/rdf/search#search> { 
		?label bds:search ?__token__ ; 
		bds:relevance ?score . 
		} 
           
	} UNION { 
           
		BIND(
		IRI(
		REPLACE(
				REPLACE(
				REPLACE(?__token__ , \"\\\\*\", \"\"),
				\"\\\\\\\\:\", \":\") ,
				\"<|>\", \"\")
		) AS ?x ) .
	 
		BIND(IF(ISIRI(?x), ?x, BNODE()) AS ?item) . 
		FILTER (!ISBLANK(?item)) 
			   
		BIND (1.0 as ?score) .       
     
	} 
	VALUES ?type {__typesSearchQuery__} 
	?item __typeRelation__ ?type . 
    ?item __labelRelation__ ?label . 
	OPTIONAL { 
		?child __parentshipRelation__  ?item . 
		BIND (0.6 as ?score) . 
	}
    BIND(bound(?child) as ?hasChildren) 
	} ORDER BY ?score LIMIT 100"
          
}'
>             
</terminology-alignment-tool>